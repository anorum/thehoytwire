---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// Get all fantasy recaps
const allRecaps = await getCollection('fantasy-recaps');

// Sort by date (newest first)
const recaps = allRecaps.sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

// Get current season recaps
const currentSeason = 2025;
const currentSeasonRecaps = recaps.filter(recap => recap.data.season === currentSeason);

// Get featured recap
const featuredRecap = recaps.find(recap => recap.data.featured) || recaps[0];
---

<BaseLayout 
  title="Fantasy Recaps - The Hoyt Wire" 
  description="Epic weekly recaps of the Hoyt Football League - where every touchdown tells a story and every trade sparks a saga."
>
  <!-- Hero Section -->
  <section class="recaps-hero">
    <div class="hero-content">
      <h1 class="hero-title">Fantasy Football Chronicles</h1>
      <p class="hero-subtitle">
        12 managers. 18 weeks of chaos. Infinite storylines of triumph and heartbreak.
      </p>
      <div class="season-stats">
        <div class="stat-box">
          <span class="stat-number">{currentSeasonRecaps.length}</span>
          <span class="stat-label">Episodes</span>
        </div>
        <div class="stat-box">
          <span class="stat-number">2025</span>
          <span class="stat-label">Season</span>
        </div>
        <div class="stat-box">
          <span class="stat-number">12</span>
          <span class="stat-label">Warriors</span>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Episode -->
  {featuredRecap && (
    <section class="featured-episode">
      <div class="featured-badge">ðŸ”¥ LATEST EPISODE</div>
      <article class="featured-recap-card">
        <div class="episode-header">
          <div class="episode-meta">
            <span class="episode-number">{featuredRecap.data.episode}</span>
            <span class="week-indicator">Week {featuredRecap.data.week}</span>
          </div>
          <time class="episode-date">
            {new Date(featuredRecap.data.pubDate).toLocaleDateString('en-US', { 
              month: 'long', 
              day: 'numeric',
              year: 'numeric'
            })}
          </time>
        </div>
        
        <h2 class="episode-title">
          <a href={`/fantasy-recaps/${featuredRecap.id}`}>{featuredRecap.data.title}</a>
        </h2>
        
        <p class="episode-description">{featuredRecap.data.description}</p>
        
        {(featuredRecap.data.highestScore || featuredRecap.data.lowestScore) && (
          <div class="episode-highlights">
            {featuredRecap.data.highestScore && (
              <div class="highlight-box winner">
                <div class="highlight-label">ðŸ‘‘ WEEK CHAMPION</div>
                <div class="highlight-team">{featuredRecap.data.highestScore.team}</div>
                <div class="highlight-score">{featuredRecap.data.highestScore.score} pts</div>
                <div class="highlight-owner">by {featuredRecap.data.highestScore.owner}</div>
              </div>
            )}
            
            {featuredRecap.data.lowestScore && (
              <div class="highlight-box loser">
                <div class="highlight-label">ðŸ’€ WEEK VICTIM</div>
                <div class="highlight-team">{featuredRecap.data.lowestScore.team}</div>
                <div class="highlight-score">{featuredRecap.data.lowestScore.score} pts</div>
                <div class="highlight-owner">by {featuredRecap.data.lowestScore.owner}</div>
              </div>
            )}
          </div>
        )}
        
        <a href={`/fantasy-recaps/${featuredRecap.id}`} class="read-episode-btn">
          Read the Full Drama â†’
        </a>
      </article>
    </section>
  )}

  <!-- All Episodes -->
  <section class="all-episodes">
    <div class="section-header">
      <h2 class="section-title">All Episodes</h2>
      <div class="season-filter">
        <span class="filter-label">Season:</span>
        <select class="season-select">
          <option value="2025" selected>2025</option>
        </select>
      </div>
    </div>

    <div class="episodes-grid">
      {recaps.map((recap) => (
        <article class="episode-card">
          <div class="card-header">
            <div class="episode-badge">{recap.data.episode}</div>
            <div class="week-badge">Week {recap.data.week}</div>
          </div>
          
          <h3 class="card-title">
            <a href={`/fantasy-recaps/${recap.id}`}>{recap.data.title}</a>
          </h3>
          
          <p class="card-description">{recap.data.description}</p>
          
          <div class="card-stats">
            {recap.data.highestScore && (
              <div class="mini-stat high">
                <span class="mini-label">High:</span>
                <span class="mini-value">{recap.data.highestScore.score}</span>
              </div>
            )}
            {recap.data.lowestScore && (
              <div class="mini-stat low">
                <span class="mini-label">Low:</span>
                <span class="mini-value">{recap.data.lowestScore.score}</span>
              </div>
            )}
          </div>
          
          <div class="card-footer">
            <time class="card-date">
              {new Date(recap.data.pubDate).toLocaleDateString('en-US', { 
                month: 'short', 
                day: 'numeric' 
              })}
            </time>
            <div class="card-tags">
              {recap.data.tags.slice(0, 2).map((tag) => (
                <span class="mini-tag">{tag}</span>
              ))}
            </div>
          </div>
        </article>
      ))}
    </div>
  </section>
</BaseLayout>

<style>
  /* Hero Section */
  .recaps-hero {
    background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);
    color: white;
    padding: 4rem 0;
    margin: -2rem -2rem 3rem -2rem;
    text-align: center;
    position: relative;
    overflow: hidden;
  }

  .recaps-hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
    opacity: 0.1;
  }

  .hero-content {
    position: relative;
    z-index: 1;
    max-width: 800px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .hero-title {
    font-size: 4rem;
    font-weight: 900;
    margin-bottom: 1.5rem;
    background: linear-gradient(45deg, #f59e0b, #fbbf24, #fcd34d);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 4px 8px rgba(0,0,0,0.3);
  }

  .hero-subtitle {
    font-size: 1.5rem;
    margin-bottom: 3rem;
    opacity: 0.9;
    line-height: 1.6;
    font-weight: 500;
  }

  .season-stats {
    display: flex;
    justify-content: center;
    gap: 3rem;
  }

  .stat-box {
    text-align: center;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .stat-number {
    display: block;
    font-size: 2.5rem;
    font-weight: 800;
    color: #fbbf24;
    text-shadow: 0 2px 4px rgba(0,0,0,0.3);
  }

  .stat-label {
    font-size: 0.875rem;
    opacity: 0.8;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: 600;
  }

  /* Featured Episode */
  .featured-episode {
    margin-bottom: 4rem;
    position: relative;
  }

  .featured-badge {
    background: linear-gradient(135deg, #dc2626, #ef4444);
    color: white;
    padding: 0.75rem 2rem;
    border-radius: 25px;
    font-weight: 800;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    display: inline-block;
    margin-bottom: 1.5rem;
    box-shadow: 0 4px 12px rgba(220, 38, 38, 0.3);
  }

  .featured-recap-card {
    background: white;
    border-radius: 16px;
    padding: 3rem;
    box-shadow: 0 20px 40px rgba(0,0,0,0.1);
    border: 1px solid #e5e7eb;
    position: relative;
    overflow: hidden;
  }

  .featured-recap-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #f59e0b, #ef4444, #8b5cf6);
  }

  .episode-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }

  .episode-meta {
    display: flex;
    gap: 1rem;
  }

  .episode-number {
    background: linear-gradient(135deg, #1e40af, #3b82f6);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 25px;
    font-weight: 700;
    font-size: 0.875rem;
  }

  .week-indicator {
    background: linear-gradient(135deg, #059669, #10b981);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 25px;
    font-weight: 700;
    font-size: 0.875rem;
  }

  .episode-date {
    color: #6b7280;
    font-weight: 500;
  }

  .episode-title {
    font-size: 2.5rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
    line-height: 1.2;
  }

  .episode-title a {
    color: #111827;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .episode-title a:hover {
    color: #3b82f6;
  }

  .episode-description {
    font-size: 1.25rem;
    color: #4b5563;
    margin-bottom: 2rem;
    line-height: 1.7;
  }

  .episode-highlights {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .highlight-box {
    padding: 1.5rem;
    border-radius: 12px;
    text-align: center;
    color: white;
    position: relative;
    overflow: hidden;
  }

  .highlight-box.winner {
    background: linear-gradient(135deg, #059669, #10b981);
  }

  .highlight-box.loser {
    background: linear-gradient(135deg, #dc2626, #ef4444);
  }

  .highlight-label {
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
    opacity: 0.9;
    margin-bottom: 0.5rem;
  }

  .highlight-team {
    font-size: 1.125rem;
    font-weight: 700;
    margin-bottom: 0.25rem;
  }

  .highlight-score {
    font-size: 2rem;
    font-weight: 900;
    margin-bottom: 0.25rem;
  }

  .highlight-owner {
    font-size: 0.875rem;
    opacity: 0.9;
  }

  .read-episode-btn {
    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    color: white;
    padding: 1rem 2.5rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 700;
    font-size: 1.125rem;
    display: inline-block;
    transition: all 0.2s ease;
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
  }

  .read-episode-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
  }

  /* All Episodes Section */
  .all-episodes {
    margin-bottom: 4rem;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }

  .section-title {
    font-size: 2.5rem;
    font-weight: 800;
    color: #111827;
  }

  .season-filter {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .filter-label {
    font-weight: 600;
    color: #4b5563;
  }

  .season-select {
    padding: 0.5rem 1rem;
    border: 2px solid #d1d5db;
    border-radius: 6px;
    font-weight: 600;
    background: white;
  }

  .episodes-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 2rem;
  }

  .episode-card {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 8px 16px rgba(0,0,0,0.1);
    border: 1px solid #e5e7eb;
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
  }

  .episode-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #3b82f6, #8b5cf6);
  }

  .episode-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 24px rgba(0,0,0,0.15);
  }

  .card-header {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .episode-badge, .week-badge {
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
  }

  .episode-badge {
    background: #f3f4f6;
    color: #374151;
  }

  .week-badge {
    background: #dbeafe;
    color: #1e40af;
  }

  .card-title {
    font-size: 1.375rem;
    font-weight: 700;
    margin-bottom: 1rem;
    line-height: 1.3;
  }

  .card-title a {
    color: #111827;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .card-title a:hover {
    color: #3b82f6;
  }

  .card-description {
    color: #4b5563;
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  .card-stats {
    display: flex;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .mini-stat {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.5rem 0.75rem;
    border-radius: 6px;
    font-size: 0.875rem;
    font-weight: 600;
  }

  .mini-stat.high {
    background: #dcfce7;
    color: #166534;
  }

  .mini-stat.low {
    background: #fee2e2;
    color: #991b1b;
  }

  .card-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1rem;
    border-top: 1px solid #e5e7eb;
  }

  .card-date {
    color: #6b7280;
    font-weight: 500;
  }

  .card-tags {
    display: flex;
    gap: 0.5rem;
  }

  .mini-tag {
    background: #f3f4f6;
    color: #4b5563;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.5rem;
    }

    .season-stats {
      gap: 1.5rem;
    }

    .featured-recap-card {
      padding: 2rem;
    }

    .episode-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .episode-title {
      font-size: 2rem;
    }

    .section-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .episodes-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
